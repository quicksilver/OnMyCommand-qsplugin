//**************************************************************************************// Filename:	CMUtilsObjectList.cp//				Part of Contextual Menu Workshop by Abracode Inc.//				http://free.abracode.com/cmworkshop///// Copyright © 2002-2003 Abracode, Inc.  All rights reserved.//// Description:	static utilities for Contextual Menu Plugins//////**************************************************************************************#include "CMUtils.h"#include "DebugSettings.h"#include "StAEDesc.h"// ---------------------------------------------------------------------------// FSSpecProcessObjectList// ---------------------------------------------------------------------------/*	generic file list processing loop	caller must supply non-nil processing procedure of the prototype:	OSStatus (*FSSpecHandlerProc)( FSSpec *inSpec, void *inData );in flags pass:		kProcBreakOnFirst is a directive to break on first item processed successfullyon output you may receive flags:	kListOutMultipleObjects when more than one object is present in list*/BooleanCMUtils::ProcessObjectList( const AEDescList *fileList, UInt32 &ioFlags, FSSpecHandlerProc inProcPtr, void *inProcData /*=NULL*/){	Boolean outOK = false;	ioFlags &= ~kListOutFlagsMask;	if( (fileList == NULL) || (inProcPtr == NULL) )		return false;	OSStatus err = noErr;	FSSpec fileSpec;	SInt32 listItemsCount = 0;	if( ::AECountItems(fileList, &listItemsCount) == noErr )	{			if(listItemsCount > 1)			ioFlags |= kListOutMultipleObjects;		for (int i = 1; i <= listItemsCount; i++)		{			// Get ith item in the object list			StAEDesc file;			AEKeyword theKeyword;			err = ::AEGetNthDesc(fileList, i, typeWildCard, &theKeyword, file);			if (err == noErr)			{				if( GetFSSpec(file, fileSpec) == noErr )				{					err = (*inProcPtr)( &fileSpec, inProcData );									if(err == noErr)					{						outOK = true;						if( (ioFlags & kProcBreakOnFirst) != 0)							break;					}				}			}		}	}		return outOK;}// ---------------------------------------------------------------------------// FSRefProcessObjectList// ---------------------------------------------------------------------------/*	generic file list processing loop	caller must supply non-nil processing procedure of the prototype:	OSStatus (*FSRefHandlerProc)( FSRef *inRef, void *inData );in flags pass:		kProcBreakOnFirst is a directive to break on first item processed successfullyon output you may receive flags:	kListOutMultipleObjects when more than one object is present in list*/BooleanCMUtils::ProcessObjectList( const AEDescList *fileList, UInt32 &ioFlags, FSRefHandlerProc inProcPtr, void *inProcData /*=NULL*/){	Boolean outOK = false;	ioFlags &= ~kListOutFlagsMask;	if( (fileList == NULL) || (inProcPtr == NULL) )		return false;	OSStatus err = noErr;	FSRef fileRef;	SInt32 listItemsCount = 0;	if( ::AECountItems(fileList, &listItemsCount) == noErr )	{		if(listItemsCount > 1)			ioFlags |= kListOutMultipleObjects;		for (int i = 1; i <= listItemsCount; i++)		{			// Get ith item in the object list			StAEDesc file;			AEKeyword theKeyword;			err = ::AEGetNthDesc(fileList, i, typeWildCard, &theKeyword, file);			if (err == noErr)			{				if( GetFSRef(file, fileRef) == noErr )				{					err = (*inProcPtr)( &fileRef, inProcData );									if(err == noErr)					{						outOK = true;						if( (ioFlags & kProcBreakOnFirst) != 0)							break;					}				}			}		}	}		return outOK;}